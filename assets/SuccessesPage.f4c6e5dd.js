import{_ as m,M as h,ai as d,N as i,O as a,P as t,Y as l,R as o,X as n,T as c,W as f,Z as p,$ as g,y as v,b3 as y,aq as E}from"./index.177adcd4.js";import{Q as S}from"./QBtnGroup.d68b553f.js";import{a as b,Q as $}from"./QItem.edcb6f8f.js";import{Q as B}from"./QPage.d30e43d5.js";import{u as C}from"./store_successes.16a1b7c6.js";import{u}from"./store_settings.b391ebe3.js";import{D as w,G as _,H as q}from"./HabitEntry.b013707d.js";const A=h({name:"IndexPage",components:{DreamEntry:w,GoalEntry:_,HabitEntry:q},data(){return{}},beforeMount(){this.successesStore=C(),this.successesStore.initialize(),this.successesStore.initializeArchive(),this.settingsStore=u(),this.settingsStore.initialize(),this.$emit("refresh-header")},computed:{...d(u,["useBigButtons"]),buttonClass(){return this.useBigButtons?"bigBtn":""}},methods:{getComponentForEntry(e){switch(e.type){case"dream":return"DreamEntry";case"goal":return"GoalEntry";case"habit":return"HabitEntry";default:return null}},viewSuccessesArchive(){this.$router.push("successesArchive")},archiveOldEntries(){this.$q.dialog({title:"Confirm",message:"Are you sure you want to archive old entries?",cancel:!0,persistent:!0}).onOk(()=>{this.successesStore.archiveOldEntries()?this.$q.notify("You must have at least 30 successes to archive."):this.$q.notify("All entries older than the most recent 30 have been archived.")})},removeEntry(e){e.type=="goal"?this.$q.dialog({title:"Confirm",message:'Are you sure you want to delete the goal success: "'+e.goal+'"',cancel:!0,persistent:!0}).onOk(()=>{this.$q.notify('Goal record deleted: "'+e.goal+'"'),this.successesStore.removeEntry(e)}):e.type=="habit"?this.$q.dialog({title:"Confirm",message:'Are you sure you want to delete the habit milestone: "'+e.habit+'"',cancel:!0,persistent:!0}).onOk(()=>{this.$q.notify('Habit milestone record deleted: "'+e.habit+'"'),this.successesStore.removeEntry(e)}):e.type=="dream"?this.$q.dialog({title:"Confirm",message:'Are you sure you want to delete the dream achievement: "'+e.title+'"',cancel:!0,persistent:!0}).onOk(()=>{this.$q.notify('Dream achievement deleted: "'+e.title+'"'),this.successesStore.removeEntry(e)}):this.successesStore.removeEntry(e)}}}),k={class:"q-gutter-md row justify-center"},O=l("h1",{class:"text-white"},"Your Successes!",-1);function Q(e,r,D,x,z,G){return i(),a(B,{"items-center":"",class:"successes-page"},{default:t(()=>[l("div",k,[o(S,{"no-wrap":""},{default:t(()=>[o(n,{size:"lg",class:"top-button",onClick:r[0]||(r[0]=s=>this.archiveOldEntries())},{default:t(()=>[c("Archive Old")]),_:1}),o(n,{size:"lg",class:"top-button",onClick:r[1]||(r[1]=s=>this.viewSuccessesArchive()),style:{"margin-left":"1rem"}},{default:t(()=>[c("View Archive")]),_:1})]),_:1})]),O,o(b,null,{default:t(()=>[(i(!0),f(g,null,p(this.successesStore.successes,s=>v((i(),a($,{key:s},{default:t(()=>[(i(),a(y(e.getComponentForEntry(s)),{entry:s,buttonClass:this.useBigButtons?"bigBtn":"",onRemoveEntry:e.removeEntry},null,40,["entry","buttonClass","onRemoveEntry"]))]),_:2},1024)),[[E]])),128))]),_:1})]),_:1})}var I=m(A,[["render",Q]]);export{I as default};
