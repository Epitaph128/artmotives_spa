import{_ as p,F as S,o as D,ak as y,G as r,H as h,I as i,R as l,J as o,P as n,al as d,L as k,O as u,K as v,S as C,T as w,t as b,am as $,an as _,ao as g,ar as T,as as Q}from"./index.445a0815.js";import{Q as B}from"./QBtnGroup.d51b2be8.js";import{d as m,Q as Y}from"./QItem.dfa229b6.js";import{Q as M}from"./QList.0a5e30b3.js";import{Q as V}from"./QPage.57f5ae4f.js";import{u as q,Q as x}from"./QSpinnerFacebook.f77cd2f2.js";import{u as A}from"./store_dreams.33b96363.js";import{u as F}from"./store_successes.21be0bf4.js";import{u as f}from"./store_settings.d317b905.js";const I=S({name:"DreamsPage",data(){return[]},created(){this.showLoading()},beforeMount(){this.dreamsStore=A(),this.dreamsStore.initialize(),this.successesStore=F(),this.successesStore.initialize(),this.settingsStore=f(),this.settingsStore.initialize(),this.$emit("refresh-header")},setup(){const t=q();let e;return D(()=>{e!==void 0&&(clearTimeout(e),t.loading.hide())}),{showLoading(){t.loading.show({spinner:x,spinnerColor:"white",spinnerSize:140,backgroundColor:"black",message:"Loading your dreams... Please wait!",messageColor:"white"}),e=setTimeout(()=>{t.loading.hide(),e=void 0},500)}}},computed:{...y(f,["useBigButtons"]),buttonClass(){return this.useBigButtons?"bigBtn":""},formattedDate(){return function(t){const e=new Date(Date.parse(t));return m.formatDate(e,this.settingsStore.useDateFormat)}}},methods:{completeDream(t){if(!t.ready){t.ready=!0,this.$q.notify("Click again to mark complete!");return}this.$q.dialog({title:"Confirm",message:'Confirm you achieved your dream: "'+t.title+'"',cancel:!0,persistent:!0}).onOk(()=>{var e=2500;this.$q.notify("Rewarded "+e+" coins for completion!"),this.settingsStore.coins=this.settingsStore.coins+e,this.settingsStore.totalCoins=this.settingsStore.totalCoins+e,t.date=this.getDateWithTime(),t.dateTieBreaker=this.getTime(),t.type="dream",this.successesStore.addEntry(t),this.$q.notify("Dream achieved: "+t.title+"!"),this.settingsStore.saveCoins(),this.dreamsStore.removeDream(t.id),this.$emit("refresh-header")})},removeDream(t){this.$q.dialog({title:"Confirm",message:"Are you sure you want to delete this dream?",cancel:!0,persistent:!0}).onOk(()=>{this.$q.notify("Dream Deleted."),this.dreamsStore.removeDream(t)})},hideTutorial(){this.$q.dialog({title:"Acknowledge",message:"Have you read and understood the instructions?",cancel:!0,persistent:!0}).onOk(()=>{this.settingsStore.tutorialSettings.dreamsTutorialHidden=!0,this.settingsStore.saveTutorialSettings()})},getDate(){const t=Date().toString();return m.formatDate(t,"MMM D, YYYY")},getMaskDate(t){if(this.settingsStore.useDateFormat==="MMM D, YYYY")return"";const e=new Date(Date.parse(t));return m.formatDate(e,this.settingsStore.useDateFormat)},getDateWithTime(){const t=Date().toString();return m.formatDate(t,"MMM D, YYYY, hh:mm A")},getTime(){return new Date().getTime()}}}),L={class:"flex justify-center q-mb-lg"},z={key:0,class:"tutorial"},N=l("p",null," Go to Settings and then Export Report to generate an export report with your dreams. You can then paste this into the AI large language model of your choice and it should return a list of goals. If you copy those (only the goals code) into the import goals setting then you can use AI to create a schedule of goals for you based on your personal data! This won't happen automatically so your data is kept private by default. ",-1),P={class:"notes-data"},U=l("br",null,null,-1),H={class:"text-subtitle2"},O={key:0},R={key:1};function E(t,e,c,G,W,j){return r(),h(V,{"items-center":"",class:"dreams-page"},{default:i(()=>[l("div",L,[o(B,{"no-wrap":""},{default:i(()=>[o(n,{class:d([t.buttonClass,"top-button"]),onClick:e[0]||(e[0]=s=>this.dreamsStore.addDream())},{default:i(()=>[k("New Dream")]),_:1},8,["class"])]),_:1})]),this.settingsStore.tutorialSettings.dreamsTutorialHidden?v("",!0):(r(),u("div",z,[N,o(n,{flat:"",dense:"",glossy:"",icon:"done",color:"check",onClick:e[1]||(e[1]=s=>this.hideTutorial())})])),o(M,null,{default:i(()=>[(r(!0),u(w,null,C(this.dreamsStore.dreams,s=>b((r(),h(Y,{key:s},{default:i(()=>[o($,{class:"notes-card text-white full-width outlined"},{default:i(()=>[o(_,null,{default:i(()=>[l("div",P,[o(g,{multiline:"",autogrow:"",wrap:"on","min-rows":1,"max-rows":10,standout:"bg-primary text-black",class:"full-width text-h6","input-class":"text-left",label:"Dream Title",modelValue:s.title,"onUpdate:modelValue":[a=>s.title=a,e[2]||(e[2]=a=>this.dreamsStore.saveDreams())],onFocus:e[3]||(e[3]=a=>this.$q.notify("Dream will be saved once you enter a title"))},null,8,["modelValue","onUpdate:modelValue"]),U,l("div",H,[o(g,{"no-outline":"",style:{"padding-right":"1em","min-width":"35%"},"input-class":"text-left",label:"Dream Created",modelValue:s.createdDate,"onUpdate:modelValue":a=>s.createdDate=a,value:t.formattedDate(s.createdDate),mask:this.getMaskDate(s.createdDate),readonly:""},null,8,["modelValue","onUpdate:modelValue","value","mask"])])])]),_:2},1024),o(T,null,{default:i(()=>[s.ready?(r(),u("div",O,[o(n,{class:d(t.buttonClass),flat:"",dense:"",glossy:"",icon:"done_all",color:"green",onClick:a=>t.completeDream(s)},null,8,["class","onClick"])])):(r(),u("div",R,[o(n,{class:d(t.buttonClass),flat:"",dense:"",glossy:"",icon:"check",color:"green",onClick:a=>t.completeDream(s)},null,8,["class","onClick"])])),o(n,{class:d(t.buttonClass),style:{margin:"0"},flat:"",dense:"",glossy:"",icon:"delete",color:"black",onClick:a=>t.removeDream(s.id)},null,8,["class","onClick"])]),_:2},1024)]),_:2},1024)]),_:2},1024)),[[Q]])),128))]),_:1})]),_:1})}var it=p(I,[["render",E]]);export{it as default};
