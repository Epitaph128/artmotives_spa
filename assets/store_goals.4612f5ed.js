import{a5 as n}from"./index.71846c29.js";import{d as r}from"./date.fc741467.js";const f="store_goals",u=(e,t)=>{let a=new Date(e).getTime(),s=new Date(t).getTime();return a<s?t:(a>s,e)},D=n("goals",{state:()=>({goals:[],weekday:["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"]}),actions:{displayRepeatDays(e){return Array.isArray(e)&&e.length>0?(e.sort((t,a)=>t.value-a.value),e.map(t=>t.label).join(", ")):"Don't Repeat"},getWeekday(e){const t=new Date(e);return this.weekday[t.getDay()]},nextDate(e){if(Array.isArray(e.repeatDays)&&e.repeatDays.length>0){const t=u(new Date(e.date),new Date(this.getDate())),a=e.repeatDays.map(l=>l.value);let s=t,i=0;for(;i<=7&&(s.setDate(s.getDate()+1),!a.includes(s.getDay()));)i++;return this.getDate(s)}return null},getDate(e=""){return r.formatDate(e||new Date().toString(),"MMM D, YYYY")},getDateWithTime(e=""){return r.formatDate(e||new Date().toString(),"MMM D, YYYY, hh:mm A")},baseReward(e){if(e.difficulty=="Easy")var t=100;return e.difficulty=="Moderate"?t=250:e.difficulty=="Hard"?t=500:e.difficulty=="Epic"&&(t=1e3),t},goalReward(e){if(e.difficulty=="Easy"){var t=100;e.stepsEnabled&&(t=t+(e.stepsSize-1)*25)}return e.difficulty=="Moderate"?(t=250,e.stepsEnabled&&(t=t+(e.stepsSize-1)*50)):e.difficulty=="Hard"?(t=500,e.stepsEnabled&&(t=t+(e.stepsSize-1)*75)):e.difficulty=="Epic"&&(t=1e3,e.stepsEnabled&&(t=t+(e.stepsSize-1)*100)),t},goalExpired(e){const t=new Date;return t.setHours(0,0,0,0),new Date(e.date)<t},initialize(){const e=localStorage.getItem(f);this.goals=e?JSON.parse(e):[],Array.isArray(this.goals)||(this.goals=[])},addGoal(e,t){Array.isArray(this.goals)||(this.goals=[]),e?(this.goals.push(e),this.sortGoals(t)):(t=="Difficulty \u2198"?this.goals.unshift({goal:"",date:r.formatDate(new Date().toString(),"MMM D, YYYY"),difficulty:"Epic",dateTieBreaker:new Date().getTime()}):this.goals.unshift({goal:"",date:r.formatDate(new Date().toString(),"MMM D, YYYY"),difficulty:"Easy",dateTieBreaker:new Date().getTime()}),this.sortGoals(t))},removeGoal(e){const t=this.goals.indexOf(e);this.goals.splice(t,1),this.saveGoals()},disableNotification(e){e.changeAlertTimeDialog=!1,e.alertTime=null,this.saveGoals()},getDifficultyAsNum(e){return e=="Easy"?0:e=="Moderate"?1:e=="Hard"?2:e=="Epic"?3:0},sortGoals(e){e=="Date"?this.goals.sort((t,a)=>{const s=new Date(t.date),i=new Date(a.date);return s-i}):e=="Difficulty \u2197"?this.goals.sort((t,a)=>this.getDifficultyAsNum(t.difficulty)-this.getDifficultyAsNum(a.difficulty)):e=="Difficulty \u2198"&&this.goals.sort((t,a)=>this.getDifficultyAsNum(a.difficulty)-this.getDifficultyAsNum(t.difficulty)),this.saveGoals()},saveGoals(){localStorage.setItem(f,JSON.stringify(this.goals))},eraseGoals(){localStorage.setItem(f,JSON.stringify([]))}}});export{D as u};
