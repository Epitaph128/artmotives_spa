import{_ as h,M as d,ai as p,N as o,O as a,P as t,Y as m,R as i,X as n,aj as u,T as c,W as f,Z as v,$ as g,y,b3 as b,aq as E}from"./index.e157ab8e.js";import{Q as S}from"./QBtnGroup.53240083.js";import{a as $,Q as C}from"./QItem.20db34a6.js";import{Q as B}from"./QPage.39266aac.js";import{u as w}from"./store_successes.32132764.js";import{u as l}from"./store_settings.53546f04.js";import{D as q,G as A,H as _}from"./HabitEntry.9f99beac.js";import"./date.942fa460.js";const k=d({name:"IndexPage",components:{DreamEntry:q,GoalEntry:A,HabitEntry:_},data(){return{}},beforeMount(){this.successesStore=w(),this.successesStore.initialize(),this.successesStore.initializeArchive(),this.settingsStore=l(),this.settingsStore.initialize(),this.$emit("refresh-header")},computed:{...p(l,["useBigButtons"]),buttonClass(){return this.useBigButtons?"bigBtn":""}},methods:{getComponentForEntry(e){switch(e.type){case"dream":return"DreamEntry";case"goal":return"GoalEntry";case"habit":return"HabitEntry";default:return null}},viewSuccessesArchive(){this.$router.push("successesArchive")},archiveOldEntries(){this.$q.dialog({title:"Confirm",message:"Are you sure you want to archive old entries?",cancel:!0,persistent:!0}).onOk(()=>{this.successesStore.archiveOldEntries()?this.$q.notify("You must have at least 30 successes to archive."):this.$q.notify("All entries older than the most recent 30 have been archived.")})},removeEntry(e){e.type=="goal"?this.$q.dialog({title:"Confirm",message:'Are you sure you want to delete the goal success: "'+e.goal+'"',cancel:!0,persistent:!0}).onOk(()=>{this.$q.notify('Goal record deleted: "'+e.goal+'"'),this.successesStore.removeEntry(e)}):e.type=="habit"?this.$q.dialog({title:"Confirm",message:'Are you sure you want to delete the habit milestone: "'+e.habit+'"',cancel:!0,persistent:!0}).onOk(()=>{this.$q.notify('Habit milestone record deleted: "'+e.habit+'"'),this.successesStore.removeEntry(e)}):e.type=="dream"?this.$q.dialog({title:"Confirm",message:'Are you sure you want to delete the dream achievement: "'+e.title+'"',cancel:!0,persistent:!0}).onOk(()=>{this.$q.notify('Dream achievement deleted: "'+e.title+'"'),this.successesStore.removeEntry(e)}):this.successesStore.removeEntry(e)}}}),O={class:"q-gutter-md row justify-center"},Q=m("h1",{class:"text-white"},"Your Successes!",-1);function D(e,r,G,z,H,N){return o(),a(B,{"items-center":"",class:"successes-page"},{default:t(()=>[m("div",O,[i(S,{"no-wrap":""},{default:t(()=>[i(n,{class:u([e.buttonClass,"top-button"]),onClick:r[0]||(r[0]=s=>this.archiveOldEntries())},{default:t(()=>[c("Archive Old")]),_:1},8,["class"]),i(n,{class:u([e.buttonClass,"top-button"]),onClick:r[1]||(r[1]=s=>this.viewSuccessesArchive()),style:{"margin-left":"1rem"}},{default:t(()=>[c("View Archive")]),_:1},8,["class"])]),_:1})]),Q,i($,null,{default:t(()=>[(o(!0),f(g,null,v(this.successesStore.successes,s=>y((o(),a(C,{key:s},{default:t(()=>[(o(),a(b(e.getComponentForEntry(s)),{entry:s,buttonClass:this.useBigButtons?"bigBtn":"",onRemoveEntry:e.removeEntry},null,40,["entry","buttonClass","onRemoveEntry"]))]),_:2},1024)),[[E]])),128))]),_:1})]),_:1})}var L=h(k,[["render",D]]);export{L as default};
